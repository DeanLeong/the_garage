[{"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/index.js":"1","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/reportWebVitals.js":"2","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/App.js":"3","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/auth.js":"4","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Login.jsx":"5","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/containers/MainContainer.jsx":"6","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/layouts/Layout.jsx":"7","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Register.jsx":"8","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/apiConfig.js":"9","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesDetail.jsx":"10","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/AddMc.jsx":"11","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/McNotes.jsx":"12","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Home.jsx":"13","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/motorcycles.js":"14","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/maintenance_notes.js":"15","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/components/Footer.jsx":"16","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/components/Header.jsx":"17","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesEdit.jsx":"18","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesAdd.jsx":"19"},{"size":586,"mtime":1606947692580,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1606784954798,"results":"22","hashOfConfig":"21"},{"size":5888,"mtime":1607026106280,"results":"23","hashOfConfig":"21"},{"size":934,"mtime":1606869631520,"results":"24","hashOfConfig":"21"},{"size":1235,"mtime":1607087996515,"results":"25","hashOfConfig":"21"},{"size":2689,"mtime":1606862714962,"results":"26","hashOfConfig":"21"},{"size":324,"mtime":1606947692580,"results":"27","hashOfConfig":"21"},{"size":1337,"mtime":1607035213479,"results":"28","hashOfConfig":"21"},{"size":136,"mtime":1606947692584,"results":"29","hashOfConfig":"21"},{"size":2706,"mtime":1607034099257,"results":"30","hashOfConfig":"21"},{"size":1630,"mtime":1607090738784,"results":"31","hashOfConfig":"21"},{"size":1521,"mtime":1607035799812,"results":"32","hashOfConfig":"21"},{"size":1087,"mtime":1607036899457,"results":"33","hashOfConfig":"21"},{"size":423,"mtime":1606947692586,"results":"34","hashOfConfig":"21"},{"size":901,"mtime":1606947692585,"results":"35","hashOfConfig":"21"},{"size":351,"mtime":1607090674348,"results":"36","hashOfConfig":"21"},{"size":782,"mtime":1607087703893,"results":"37","hashOfConfig":"21"},{"size":2315,"mtime":1607035236462,"results":"38","hashOfConfig":"21"},{"size":1461,"mtime":1607038167213,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"p3owgb",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/index.js",[],["86","87"],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/reportWebVitals.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/App.js",["88","89"],"import React, { useState, useEffect } from 'react'\nimport { Switch, Route, useHistory } from 'react-router-dom'\n\nimport './App.css';\nimport Layout from './layouts/Layout'\nimport Login from './screens/Login'\nimport Register from './screens/Register'\n//import AddMc from './screens/AddMc'\nimport Home from './screens/Home'\nimport McNotes from './screens/McNotes'\nimport NotesDetail from './screens/NotesDetail'\nimport NotesEdit from './screens/NotesEdit'\nimport NotesAdd from './screens/NotesAdd'\nimport AddMc from './screens/AddMc'\n\nimport { loginUser, registerUser, removeToken, verifyUser } from './services/auth'\nimport { getAllMotorcycles, postMotorcycle } from './services/motorcycles'\nimport { destroyMaintenance_note, getAllMaintenance_notes, postMaintenance_note, putMaintenance_note } from './services/maintenance_notes'\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [motorcycles, setMotorcycles] = useState([])\n  const [maintenance_notes, setMaintenance_notes] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setCurrentUser(userData)\n      if (!userData) {\n        history.push('/')\n      }\n    }\n    handleVerify()\n  }, [])\n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData)\n    setCurrentUser(userData)\n    history.push('/home')\n  }\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData)\n    setCurrentUser(userData)\n    history.push('/home')\n  }\n\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('authToken');\n    removeToken();\n    history.push('/');\n  }\n\n  useEffect(() => {\n    const fetchMotorcycles = async () => {\n      const motorcycleData = await getAllMotorcycles(currentUser)\n      setMotorcycles(motorcycleData)\n    }\n    const fetchMaintenance_notes = async () => {\n      const maintenance_noteData = await getAllMaintenance_notes(motorcycles.id)\n      setMaintenance_notes(maintenance_noteData)\n    }\n      fetchMotorcycles()\n    fetchMaintenance_notes()\n  }, [])\n  \n  const motorcycleHandleCreate = async (motorcycleData) => {\n    const newMotorcycle = await postMotorcycle(motorcycleData)\n    setMotorcycles(prevState => [...prevState, newMotorcycle])\n    history.push('/motorcycles')\n  }\n  \n  const maintenance_noteHandleCreate = async (maintenance_notesData) => {\n    const newMaintenance_note = await postMaintenance_note(maintenance_notesData)\n    setMaintenance_notes(prevState => [...prevState, newMaintenance_note])\n    history.push('/maintenance_notes')\n  }\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n    }))\n    history.push('/maintenance_notes')\n  }\n\n  const maintenance_noteHandleDelete = async (id) => {\n    await destroyMaintenance_note(id)\n    setMaintenance_notes(prevState => prevState.filter(maintenance_note => maintenance_note.id !== id))\n  }\n\n  //console.log(currentUser)\n  //console.log(motorcycles)\n\n  return (\n    <div className=\"app\">\n    <Layout\n      currentUser={currentUser}\n      handleLogout={handleLogout}\n    >\n      <Switch>\n          <Route exact path=\"/\">\n          <Login handleLogin={handleLogin} />\n        </Route>\n\n        <Route exact path='/register'>\n          <Register handleRegister={handleRegister} />\n        </Route>\n\n        <Route exact path='/home'>\n            <Home currentUser={currentUser} handleCreate={motorcycleHandleCreate} motorcycles={motorcycles}/>\n        </Route>\n\n       <Route exact path={`/motorcycles/:id`}>\n            <McNotes currentUser={currentUser} motorcycles={motorcycles} handleCreate={maintenance_noteHandleCreate} maintenance_notes={maintenance_notes}/> \n       </Route>\n      \n      <Route exact path={`/motorcycles/:id/notesdetail`} component={NotesDetail}>\n          <NotesDetail currentUser={currentUser} motorcycles={motorcycles} maintenance_notes={maintenance_notes} setMaintenance_notes={setMaintenance_notes} maintenance_notehandleUpdate={maintenance_notehandleUpdate} maintenance_noteHandleDelete={maintenance_noteHandleDelete} maintenance_noteHandleCreate={maintenance_noteHandleCreate}/>\n      </Route> \n          \n      <Route exact path={`/motorcycles/:motorcycle_id/notesdetail/:id/edit`} component={NotesEdit}>\n          <NotesEdit currentUser={currentUser} motorcycles={motorcycles} maintenance_notes={maintenance_notes} setMaintenance_notes={setMaintenance_notes} maintenance_notehandleUpdate={maintenance_notehandleUpdate} maintenance_noteHandleDelete={maintenance_noteHandleDelete} maintenance_noteHandleCreate={maintenance_noteHandleCreate}/>\n      </Route>\n          \n      <Route exact path={`/motorcycles/:motorcycle_id/notesdetail/add`} component={NotesAdd}>\n          <NotesAdd currentUser={currentUser} motorcycles={motorcycles} maintenance_notes={maintenance_notes} setMaintenance_notes={setMaintenance_notes} maintenance_notehandleUpdate={maintenance_notehandleUpdate} maintenance_noteHandleDelete={maintenance_noteHandleDelete} maintenance_noteHandleCreate={maintenance_noteHandleCreate}/>\n       </Route> \n          \n      <Route exact path={`/addmotorcycle`}>\n          <AddMc currentUser={currentUser} motorcycles={motorcycles} maintenance_notes={maintenance_notes} setMaintenance_notes={setMaintenance_notes} maintenance_notehandleUpdate={maintenance_notehandleUpdate} maintenance_noteHandleDelete={maintenance_noteHandleDelete} maintenance_noteHandleCreate={maintenance_noteHandleCreate}/>\n      </Route> \n        \n      </Switch>\n    </Layout>\n     </div>\n  );\n}\n\nexport default App;\n","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/auth.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Login.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/containers/MainContainer.jsx",[],["90","91"],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/layouts/Layout.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Register.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/apiConfig.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesDetail.jsx",["92","93","94","95","96","97"],"import React, { useEffect, useState } from 'react';\nimport './NotesDetail.css'\nimport {Link, Redirect, useParams, useHistory} from 'react-router-dom'\nimport { postMaintenance_note, getAllMaintenance_notes, destroyMaintenance_note,  putMaintenance_note } from '../services/maintenance_notes';\n// import { maintenance_noteHandleDelete, maintenance_noteHandleUpdate } from '../App'\n\n\nfunction NotesDetail(props) {\n  const [notes, setNotes] = useState([])\n  const [isLoaded, setLoaded] = useState(null)\n  const [isDeleted, setIsDeleted] = useState(false)\n  const [maintenance_notes, setMaintenance_notes] = useState({\n    content: '',\n  })\n  console.log(props)\n  const { id } = useParams()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (props.maintenance_notes.length) {\n      const getNotes = props.maintenance_notes.filter((note) => note.motorcycle_id === Number(id))\n      setNotes(getNotes)\n      setLoaded(true)\n      console.log(notes)\n    }\n  }, [id])\n\n  if (!isLoaded) {\n    return <h1>Loading...</h1>\n  }\n  if (isDeleted) {\n    history.push(`/notesdetail`)\n  }\n\n  const maintenance_noteHandleDelete = async (this_id) => {\n    await destroyMaintenance_note(this_id)\n    setIsDeleted(!isDeleted)\n  }\n\n  const maintenance_noteHandleCreate = async (maintenance_notesData) => {\n    const newMaintenance_note = await postMaintenance_note(maintenance_notesData)\n    setMaintenance_notes(prevState => [...prevState, newMaintenance_note])\n    history.push('/maintenance_notes')\n  }\n\n  \n  return (\n    <div className=\"notes-detail-container\">\n      <h2>Add a new note, or Update and Delete your current notes!</h2>\n      <Link to={`/motorcycles/${id}/notesdetail/add`}><button className=\"basic-button\">Add Note</button></Link>\n      {\n        notes.map(note => (\n          <p key={note.id}>\n            {note.content}{/* buttons for update and delete */}\n            {<button className=\"basic-button\" onClick={() => maintenance_noteHandleDelete(note.id)}>Delete Note</button>}\n            {<Link to={`/motorcycles/${id}/notesdetail/${note.id}/edit`}><button className=\"basic-button\">Edit Note</button></Link>}\n          </p>\n        ))\n       }\n    </div>\n  );\n}\n\nexport default NotesDetail;\n// onClick={maintenance_noteHandleDelete}\n// onclick={maintenance_noteHandleUpdate}\n\n//refactor code so I can get all props?\n\n//Something deleted mc 1's notes and seeding didn't bring them back\n//took SS of working code refactoring to props\n\n//i need to pass the setnotes use state from app\n\n//is currently always looking for http://localhost:3000/motorcycles/1/maintenance_notes/1 it is also currently running on load lol\n\n// onClick={maintenance_notehandleUpdate}\n//onClick={maintenance_noteHandleCreate}","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/AddMc.jsx",["98","99"],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/McNotes.jsx",["100","101","102"],"import React, { useState, useEffect } from 'react';\nimport './McNotes.css'\nimport { useParams, Link } from 'react-router-dom'\nimport { getOneMotorcycle } from \"../services/motorcycles\"\n\nfunction McNotes({ motorcycles }) {\n  const [motorcycle, setMotorcycle] = useState({})\n  //console.log(motorcycles)\n  const { id } = useParams()\n  //console.log(id)\n\n  // useEffect(() => {\n  //   const getData = async () => {\n  //     const getMotorcycle = await getOneMotorcycle(id)\n  //     setMotorcycle(getMotorcycle)\n  //   }\n  //   getData()\n  //   console.log(motorcycle)\n  // }, [id])\n\n  useEffect(() => {\n    if (motorcycles.length) {\n      const getMotorcycle = motorcycles.find((moto) => moto.id === Number(id))\n      setMotorcycle(getMotorcycle)\n      console.log(motorcycle)\n    }\n  }, [id])\n\n  return (\n    <div className=\"notes-container\">\n      <h3 className='notes-title'>See Notes for: </h3>\n          <div key={motorcycle.id} className=\"note-box\">\n            <img src={motorcycle.img_url} className=\"mc-img\"/><p>{motorcycle.name}</p>\n           { motorcycle.maintenance_notes && motorcycle.maintenance_notes.map(note => (\n             <Link key={note.id} to={`/motorcycles/${id}/notesdetail`}  className=\"note\">{note.content}</Link>\n            )) }\n      </div>\n      <Link to={`/motorcycles/${id}/notesdetail/add`}><button className=\"basic-button\">Add Note</button></Link>\n    </div>\n  );\n}\n\nexport default McNotes;\n\n//How to get notes to render only for their specific motorcycle?\n//Show that MC picture and name","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Home.jsx",["103","104"],"import React from 'react';\nimport './Home.css'\nimport {Link} from 'react-router-dom'\n\n\nfunction Home(props) {\n  // console.log(props)\n  // console.log(props.currentUser)\n  // console.log(props.currentUser.img_url)\n  // console.log(props.currentUser.username)\n  //randomly decides currentUser is null\n\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"see-all\">See All Motorcycles</h1>\n      <img src={props.currentUser.img_url} className=\"user-img\" />\n      <p>{props.currentUser.username}</p>\n      <Link to={`/addmotorcycle`}><button className=\"basic-button\">Add a new motorcycle!</button></Link>\n      <div className=\"moto-container\">\n      {\n        props.motorcycles.map(motorcycle => (\n          <div className=\"moto\" key={motorcycle.id}>\n            <Link to={`/motorcycles/${motorcycle.id}`} className=\"mc-link\"><img src={motorcycle.img_url} className=\"mc-img\"/><p>{motorcycle.name}</p></Link>\n          </div>\n        ))\n        }\n        </div>\n    </div>\n  );\n}\n\nexport default Home;\n\n// import get motorcycles from wherever it is\n//How to get user on this?","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/motorcycles.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/maintenance_notes.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/components/Footer.jsx",["105","106"],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/components/Header.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesEdit.jsx",["107","108","109","110","111","112","113","114","115"],"import React, { useEffect, useState } from 'react';\nimport './NotesEdit.css'\nimport { postMaintenance_note, getAllMaintenance_notes, destroyMaintenance_note, putMaintenance_note } from '../services/maintenance_notes';\nimport {Link, Redirect, useParams, useHistory} from 'react-router-dom'\n\nfunction NotesEdit(props) {\n  console.log(props)\n  const [note, setNote] = useState({})\n  const [isLoaded, setLoaded] = useState(null)\n  const [isUpdated, setUpdated] = useState(false)\n  const [maintenance_notes, setMaintenance_notes] = useState({\n    content: '',\n  })\n  const { id, motorcycle_id } = useParams()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (props.maintenance_notes.length) {\n      const getNote = props.maintenance_notes.find((note) => note.id === Number(id))\n      setNote(getNote)\n      setLoaded(true)\n      console.log(note)\n    }\n  }, [id])\n\n  console.log(note)\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setNote({\n      ...note,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const updated = await putMaintenance_note(id, note)\n    setUpdated(updated)\n  }\n\n  if (isUpdated) {\n    history.push(`/motorcycles/${motorcycle_id}/notesdetail`)\n  }\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n    }))\n    history.push('/maintenance_notes')\n  }\n \n  return (\n    <div className='notes-edit-container'>\n      <h1>Edit your comment! DO IT!</h1>\n      {\n        <form className=\"edit-form\" onSubmit={handleSubmit}>\n          <label className=\"edit-label\">\n            <div>Content:</div>\n            <textarea\n              className=\"edit-input\"\n              placeholder={note.content}\n              value={note.content}\n              name=\"content\"\n              required\n              autoFocus\n              onChange={handleChange}\n              />\n          </label>\n          <button type='submit' className=\"basic-button\">Save</button>\n        </form>\n      }\n    </div>\n  );\n}\n\nexport default NotesEdit;","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesAdd.jsx",["116","117","118","119","120"],"import React, { useEffect, useState } from 'react';\nimport { postMaintenance_note } from '../services/maintenance_notes';\nimport {Link, Redirect, useParams, useHistory} from 'react-router-dom'\nimport './NotesAdd.css'\n\nfunction NotesAdd(props) {\n  const [maintenance_note, setMaintenance_note] = useState({\n    content: '',\n  })\n  const [isCreated, setCreated] = useState(false)\n  console.log(props)\n  const { id, motorcycle_id } = useParams()\n  const history = useHistory()\n  \n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setMaintenance_note({\n      ...maintenance_note,\n      [name]: value,\n    })\n  }\n  \n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const created = await postMaintenance_note(motorcycle_id, maintenance_note)\n    setCreated({ created })\n    props.setMaintenance_notes(prevState => [...prevState, created])\n    history.push(`/motorcycles/${motorcycle_id}/notesdetail`)\n  }\n  \n\n  return (\n    <div className=\"notes-add-container\">\n      <h2>Add a note here!</h2>\n      <form className=\"create-note-form\" onSubmit={handleSubmit}>\n        <textarea\n          className=\"add-note\"\n          placeholder=\"Add your note here\"\n          value={maintenance_note.content}\n          name=\"content\"\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"basic-button\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default NotesAdd;",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":35,"column":6,"nodeType":"127","endLine":35,"endColumn":8,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":67,"column":6,"nodeType":"127","endLine":67,"endColumn":8,"suggestions":"130"},{"ruleId":"121","replacedBy":"131"},{"ruleId":"123","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":15,"nodeType":"135","messageId":"136","endLine":3,"endColumn":23},{"ruleId":"133","severity":1,"message":"137","line":4,"column":32,"nodeType":"135","messageId":"136","endLine":4,"endColumn":55},{"ruleId":"133","severity":1,"message":"138","line":4,"column":83,"nodeType":"135","messageId":"136","endLine":4,"endColumn":102},{"ruleId":"133","severity":1,"message":"139","line":12,"column":10,"nodeType":"135","messageId":"136","endLine":12,"endColumn":27},{"ruleId":"125","severity":1,"message":"140","line":26,"column":6,"nodeType":"127","endLine":26,"endColumn":10,"suggestions":"141"},{"ruleId":"133","severity":1,"message":"142","line":40,"column":9,"nodeType":"135","messageId":"136","endLine":40,"endColumn":37},{"ruleId":"133","severity":1,"message":"143","line":11,"column":10,"nodeType":"135","messageId":"136","endLine":11,"endColumn":19},{"ruleId":"133","severity":1,"message":"144","line":13,"column":15,"nodeType":"135","messageId":"136","endLine":13,"endColumn":22},{"ruleId":"133","severity":1,"message":"145","line":4,"column":10,"nodeType":"135","messageId":"136","endLine":4,"endColumn":26},{"ruleId":"125","severity":1,"message":"146","line":27,"column":6,"nodeType":"127","endLine":27,"endColumn":10,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":33,"column":13,"nodeType":"150","endLine":33,"endColumn":63},{"ruleId":"148","severity":1,"message":"149","line":16,"column":7,"nodeType":"150","endLine":16,"endColumn":67},{"ruleId":"148","severity":1,"message":"149","line":23,"column":76,"nodeType":"150","endLine":23,"endColumn":126},{"ruleId":"151","severity":1,"message":"152","line":7,"column":46,"nodeType":"153","endLine":7,"endColumn":61},{"ruleId":"151","severity":1,"message":"152","line":8,"column":67,"nodeType":"153","endLine":8,"endColumn":82},{"ruleId":"133","severity":1,"message":"154","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":30},{"ruleId":"133","severity":1,"message":"137","line":3,"column":32,"nodeType":"135","messageId":"136","endLine":3,"endColumn":55},{"ruleId":"133","severity":1,"message":"155","line":3,"column":57,"nodeType":"135","messageId":"136","endLine":3,"endColumn":80},{"ruleId":"133","severity":1,"message":"156","line":4,"column":9,"nodeType":"135","messageId":"136","endLine":4,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":4,"column":15,"nodeType":"135","messageId":"136","endLine":4,"endColumn":23},{"ruleId":"133","severity":1,"message":"157","line":9,"column":10,"nodeType":"135","messageId":"136","endLine":9,"endColumn":18},{"ruleId":"133","severity":1,"message":"139","line":11,"column":10,"nodeType":"135","messageId":"136","endLine":11,"endColumn":27},{"ruleId":"125","severity":1,"message":"158","line":24,"column":6,"nodeType":"127","endLine":24,"endColumn":10,"suggestions":"159"},{"ruleId":"133","severity":1,"message":"160","line":46,"column":9,"nodeType":"135","messageId":"136","endLine":46,"endColumn":37},{"ruleId":"133","severity":1,"message":"161","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":26},{"ruleId":"133","severity":1,"message":"156","line":3,"column":9,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":3,"column":15,"nodeType":"135","messageId":"136","endLine":3,"endColumn":23},{"ruleId":"133","severity":1,"message":"143","line":10,"column":10,"nodeType":"135","messageId":"136","endLine":10,"endColumn":19},{"ruleId":"133","severity":1,"message":"162","line":12,"column":11,"nodeType":"135","messageId":"136","endLine":12,"endColumn":13},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["165"],"React Hook useEffect has missing dependencies: 'currentUser' and 'motorcycles.id'. Either include them or remove the dependency array.",["166"],["163"],["164"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'getAllMaintenance_notes' is defined but never used.","'putMaintenance_note' is defined but never used.","'maintenance_notes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'notes' and 'props.maintenance_notes'. Either include them or remove the dependency array.",["167"],"'maintenance_noteHandleCreate' is assigned a value but never used.","'isCreated' is assigned a value but never used.","'user_id' is assigned a value but never used.","'getOneMotorcycle' is defined but never used.","React Hook useEffect has missing dependencies: 'motorcycle' and 'motorcycles'. Either include them or remove the dependency array.",["168"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'postMaintenance_note' is defined but never used.","'destroyMaintenance_note' is defined but never used.","'Link' is defined but never used.","'isLoaded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'note' and 'props.maintenance_notes'. Either include them or remove the dependency array.",["169"],"'maintenance_notehandleUpdate' is assigned a value but never used.","'useEffect' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [history]",{"range":"180","text":"181"},"Update the dependencies array to be: [currentUser, motorcycles.id]",{"range":"182","text":"183"},"Update the dependencies array to be: [id, notes, props.maintenance_notes]",{"range":"184","text":"185"},"Update the dependencies array to be: [id, motorcycle, motorcycles]",{"range":"186","text":"187"},"Update the dependencies array to be: [id, note, props.maintenance_notes]",{"range":"188","text":"189"},[1272,1274],"[history]",[2157,2159],"[currentUser, motorcycles.id]",[962,966],"[id, notes, props.maintenance_notes]",[785,789],"[id, motorcycle, motorcycles]",[863,867],"[id, note, props.maintenance_notes]"]