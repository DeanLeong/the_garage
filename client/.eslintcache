[{"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/index.js":"1","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/reportWebVitals.js":"2","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/App.js":"3","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/auth.js":"4","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Login.jsx":"5","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/containers/MainContainer.jsx":"6","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/layouts/Layout.jsx":"7","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Register.jsx":"8","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/apiConfig.js":"9","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesDetail.jsx":"10","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/AddMc.jsx":"11","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/McNotes.jsx":"12","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Home.jsx":"13","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/motorcycles.js":"14","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/maintenance_notes.js":"15","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/components/Footer.jsx":"16","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/components/Header.jsx":"17","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesEdit.jsx":"18","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesAdd.jsx":"19"},{"size":586,"mtime":1607108836368,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1607108836369,"results":"22","hashOfConfig":"21"},{"size":5888,"mtime":1607108836366,"results":"23","hashOfConfig":"21"},{"size":934,"mtime":1607108836374,"results":"24","hashOfConfig":"21"},{"size":1247,"mtime":1607117576534,"results":"25","hashOfConfig":"21"},{"size":2689,"mtime":1606862714962,"results":"26","hashOfConfig":"21"},{"size":324,"mtime":1607108836369,"results":"27","hashOfConfig":"21"},{"size":1731,"mtime":1607177881620,"results":"28","hashOfConfig":"21"},{"size":254,"mtime":1607110051763,"results":"29","hashOfConfig":"21"},{"size":1900,"mtime":1607180659690,"results":"30","hashOfConfig":"21"},{"size":1624,"mtime":1607108836370,"results":"31","hashOfConfig":"21"},{"size":1182,"mtime":1607121422703,"results":"32","hashOfConfig":"21"},{"size":1047,"mtime":1607179972575,"results":"33","hashOfConfig":"21"},{"size":423,"mtime":1607108836375,"results":"34","hashOfConfig":"21"},{"size":901,"mtime":1607108836375,"results":"35","hashOfConfig":"21"},{"size":550,"mtime":1607108836367,"results":"36","hashOfConfig":"21"},{"size":782,"mtime":1607108836367,"results":"37","hashOfConfig":"21"},{"size":2351,"mtime":1607113616059,"results":"38","hashOfConfig":"21"},{"size":1483,"mtime":1607113473663,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"p3owgb",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/index.js",[],["83","84"],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/reportWebVitals.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/App.js",["85","86"],"import React, { useState, useEffect } from 'react'\nimport { Switch, Route, useHistory } from 'react-router-dom'\n\nimport './App.css';\nimport Layout from './layouts/Layout'\nimport Login from './screens/Login'\nimport Register from './screens/Register'\n//import AddMc from './screens/AddMc'\nimport Home from './screens/Home'\nimport McNotes from './screens/McNotes'\nimport NotesDetail from './screens/NotesDetail'\nimport NotesEdit from './screens/NotesEdit'\nimport NotesAdd from './screens/NotesAdd'\nimport AddMc from './screens/AddMc'\n\nimport { loginUser, registerUser, removeToken, verifyUser } from './services/auth'\nimport { getAllMotorcycles, postMotorcycle } from './services/motorcycles'\nimport { destroyMaintenance_note, getAllMaintenance_notes, postMaintenance_note, putMaintenance_note } from './services/maintenance_notes'\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [motorcycles, setMotorcycles] = useState([])\n  const [maintenance_notes, setMaintenance_notes] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setCurrentUser(userData)\n      if (!userData) {\n        history.push('/')\n      }\n    }\n    handleVerify()\n  }, [])\n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData)\n    setCurrentUser(userData)\n    history.push('/home')\n  }\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData)\n    setCurrentUser(userData)\n    history.push('/home')\n  }\n\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('authToken');\n    removeToken();\n    history.push('/');\n  }\n\n  useEffect(() => {\n    const fetchMotorcycles = async () => {\n      const motorcycleData = await getAllMotorcycles(currentUser)\n      setMotorcycles(motorcycleData)\n    }\n    const fetchMaintenance_notes = async () => {\n      const maintenance_noteData = await getAllMaintenance_notes(motorcycles.id)\n      setMaintenance_notes(maintenance_noteData)\n    }\n      fetchMotorcycles()\n    fetchMaintenance_notes()\n  }, [])\n  \n  const motorcycleHandleCreate = async (motorcycleData) => {\n    const newMotorcycle = await postMotorcycle(motorcycleData)\n    setMotorcycles(prevState => [...prevState, newMotorcycle])\n    history.push('/motorcycles')\n  }\n  \n  const maintenance_noteHandleCreate = async (maintenance_notesData) => {\n    const newMaintenance_note = await postMaintenance_note(maintenance_notesData)\n    setMaintenance_notes(prevState => [...prevState, newMaintenance_note])\n    history.push('/maintenance_notes')\n  }\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n    }))\n    history.push('/maintenance_notes')\n  }\n\n  const maintenance_noteHandleDelete = async (id) => {\n    await destroyMaintenance_note(id)\n    setMaintenance_notes(prevState => prevState.filter(maintenance_note => maintenance_note.id !== id))\n  }\n\n  //console.log(currentUser)\n  //console.log(motorcycles)\n\n  return (\n    <div className=\"app\">\n    <Layout\n      currentUser={currentUser}\n      handleLogout={handleLogout}\n    >\n      <Switch>\n          <Route exact path=\"/\">\n          <Login handleLogin={handleLogin} />\n        </Route>\n\n        <Route exact path='/register'>\n          <Register handleRegister={handleRegister} />\n        </Route>\n\n        <Route exact path='/home'>\n            <Home currentUser={currentUser} handleCreate={motorcycleHandleCreate} motorcycles={motorcycles}/>\n        </Route>\n\n       <Route exact path={`/motorcycles/:id`}>\n            <McNotes currentUser={currentUser} motorcycles={motorcycles} handleCreate={maintenance_noteHandleCreate} maintenance_notes={maintenance_notes}/> \n       </Route>\n      \n      <Route exact path={`/motorcycles/:id/notesdetail`} component={NotesDetail}>\n          <NotesDetail currentUser={currentUser} motorcycles={motorcycles} maintenance_notes={maintenance_notes} setMaintenance_notes={setMaintenance_notes} maintenance_notehandleUpdate={maintenance_notehandleUpdate} maintenance_noteHandleDelete={maintenance_noteHandleDelete} maintenance_noteHandleCreate={maintenance_noteHandleCreate}/>\n      </Route> \n          \n      <Route exact path={`/motorcycles/:motorcycle_id/notesdetail/:id/edit`} component={NotesEdit}>\n          <NotesEdit currentUser={currentUser} motorcycles={motorcycles} maintenance_notes={maintenance_notes} setMaintenance_notes={setMaintenance_notes} maintenance_notehandleUpdate={maintenance_notehandleUpdate} maintenance_noteHandleDelete={maintenance_noteHandleDelete} maintenance_noteHandleCreate={maintenance_noteHandleCreate}/>\n      </Route>\n          \n      <Route exact path={`/motorcycles/:motorcycle_id/notesdetail/add`} component={NotesAdd}>\n          <NotesAdd currentUser={currentUser} motorcycles={motorcycles} maintenance_notes={maintenance_notes} setMaintenance_notes={setMaintenance_notes} maintenance_notehandleUpdate={maintenance_notehandleUpdate} maintenance_noteHandleDelete={maintenance_noteHandleDelete} maintenance_noteHandleCreate={maintenance_noteHandleCreate}/>\n       </Route> \n          \n      <Route exact path={`/addmotorcycle`}>\n          <AddMc currentUser={currentUser} motorcycles={motorcycles} maintenance_notes={maintenance_notes} setMaintenance_notes={setMaintenance_notes} maintenance_notehandleUpdate={maintenance_notehandleUpdate} maintenance_noteHandleDelete={maintenance_noteHandleDelete} maintenance_noteHandleCreate={maintenance_noteHandleCreate}/>\n      </Route> \n        \n      </Switch>\n    </Layout>\n     </div>\n  );\n}\n\nexport default App;\n","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/auth.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Login.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/containers/MainContainer.jsx",[],["87","88"],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/layouts/Layout.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Register.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/apiConfig.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesDetail.jsx",["89","90","91"],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/AddMc.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/McNotes.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/Home.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/motorcycles.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/services/maintenance_notes.js",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/components/Footer.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/components/Header.jsx",[],"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesEdit.jsx",["92","93","94","95","96"],"import React, { useEffect, useState } from 'react';\nimport './NotesEdit.css'\nimport {putMaintenance_note } from '../services/maintenance_notes';\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction NotesEdit(props) {\n  console.log(props)\n  const [note, setNote] = useState({})\n  const [isLoaded, setLoaded] = useState(null)\n  const [isUpdated, setUpdated] = useState(false)\n  const [maintenance_notes, setMaintenance_notes] = useState({\n    content: '',\n  })\n  const { id, motorcycle_id } = useParams()\n  const history = useHistory()\n\n  const sendRefresh = () => {\n    history.push(`/motorcycles/${motorcycle_id}/notesdetail`)\n  }\n\n  useEffect(() => {\n    if (props.maintenance_notes.length) {\n      const getNote = props.maintenance_notes.find((note) => note.id === Number(id))\n      setNote(getNote)\n      setLoaded(true)\n    }\n  }, [id])\n\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setNote({\n      ...note,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const updated = await putMaintenance_note(id, note)\n    setUpdated(updated)\n    sendRefresh()\n  }\n\n  // if (isUpdated) {\n  //   history.push(`/motorcycles/${motorcycle_id}/notesdetail`)\n  // }\n\n  // const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n  //   const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n  //   setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n  //     return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n  //   }))\n  //   history.push('/maintenance_notes')\n  // }\n \n  return (\n    <div className='notes-edit-container'>\n      <h2 className=\"edit-comment-title\">Edit your comment!</h2>\n      {\n        <form className=\"edit-form\" onSubmit={handleSubmit}>\n          <label className=\"edit-label\">\n            <div>Content:</div>\n            <textarea\n              className=\"edit-input\"\n              placeholder={note.content}\n              value={note.content}\n              name=\"content\"\n              required\n              autoFocus\n              onChange={handleChange}\n              />\n          </label>\n          <button type='submit' className=\"basic-button\">Save</button>\n        </form>\n      }\n    </div>\n  );\n}\n\nexport default NotesEdit;","/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesAdd.jsx",["97"],"import React, { useState } from 'react';\nimport { postMaintenance_note } from '../services/maintenance_notes';\nimport {useParams, useHistory} from 'react-router-dom'\nimport './NotesAdd.css'\n\nfunction NotesAdd(props) {\n  const [maintenance_note, setMaintenance_note] = useState({\n    content: '',\n  })\n  const [created, setCreated] = useState(false)\n  const {motorcycle_id} = useParams()\n  const history = useHistory()\n  \n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setMaintenance_note({\n      ...maintenance_note,\n      [name]: value,\n    })\n  }\n\n  const sendRefresh = () => {\n    history.push(`/motorcycles/${motorcycle_id}/notesdetail`)\n  }\n  \n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const created = await postMaintenance_note(motorcycle_id, maintenance_note)\n    setCreated({ created })\n    props.setMaintenance_notes(prevState => [...prevState, created])\n    sendRefresh()\n  }\n\n\n  return (\n    <div className=\"notes-add-container\">\n      <h2 className=\"add-note-title\">Add a note here!</h2>\n      <form className=\"create-note-form\" onSubmit={handleSubmit}>\n        <textarea\n          className=\"add-note\"\n          placeholder=\"Add your note here\"\n          value={maintenance_note.content}\n          name=\"content\"\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"basic-button\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default NotesAdd;",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":35,"column":6,"nodeType":"104","endLine":35,"endColumn":8,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":67,"column":6,"nodeType":"104","endLine":67,"endColumn":8,"suggestions":"107"},{"ruleId":"98","replacedBy":"108"},{"ruleId":"100","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":30},{"ruleId":"110","severity":1,"message":"114","line":10,"column":10,"nodeType":"112","messageId":"113","endLine":10,"endColumn":18},{"ruleId":"102","severity":1,"message":"115","line":22,"column":6,"nodeType":"104","endLine":22,"endColumn":10,"suggestions":"116"},{"ruleId":"110","severity":1,"message":"114","line":9,"column":10,"nodeType":"112","messageId":"113","endLine":9,"endColumn":18},{"ruleId":"110","severity":1,"message":"117","line":10,"column":10,"nodeType":"112","messageId":"113","endLine":10,"endColumn":19},{"ruleId":"110","severity":1,"message":"118","line":11,"column":10,"nodeType":"112","messageId":"113","endLine":11,"endColumn":27},{"ruleId":"110","severity":1,"message":"119","line":11,"column":29,"nodeType":"112","messageId":"113","endLine":11,"endColumn":49},{"ruleId":"102","severity":1,"message":"115","line":27,"column":6,"nodeType":"104","endLine":27,"endColumn":10,"suggestions":"120"},{"ruleId":"110","severity":1,"message":"121","line":10,"column":10,"nodeType":"112","messageId":"113","endLine":10,"endColumn":17},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has missing dependencies: 'currentUser' and 'motorcycles.id'. Either include them or remove the dependency array.",["125"],["122"],["123"],"no-unused-vars","'postMaintenance_note' is defined but never used.","Identifier","unusedVar","'isLoaded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.maintenance_notes'. Either include it or remove the dependency array.",["126"],"'isUpdated' is assigned a value but never used.","'maintenance_notes' is assigned a value but never used.","'setMaintenance_notes' is assigned a value but never used.",["127"],"'created' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},"Update the dependencies array to be: [history]",{"range":"135","text":"136"},"Update the dependencies array to be: [currentUser, motorcycles.id]",{"range":"137","text":"138"},"Update the dependencies array to be: [id, props.maintenance_notes]",{"range":"139","text":"140"},{"range":"141","text":"140"},[1272,1274],"[history]",[2157,2159],"[currentUser, motorcycles.id]",[743,747],"[id, props.maintenance_notes]",[847,851]]