{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport './App.css';\nimport MainContainer from './containers/MainContainer';\nimport Layout from './layouts/Layout';\nimport Login from './screens/Login';\nimport Register from './screens/Register';\nimport AddMc from './screens/AddMc';\nimport Home from './screens/Home';\nimport McNotes from './screens/McNotes';\nimport NotesDetail from './screens/NotesDetail';\nimport { loginUser, registerUser, removeToken, verifyUser } from './services/auth';\nimport { getAllMotorcycles, postMotorcycle } from './services/motorcycles';\nimport { destroyMaintenance_note, getAllMaintenance_notes, postMaintenance_note, putMaintenance_note } from './services/maintenance_notes';\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [motorcycles, setMotorcycles] = useState([]);\n  const [maintenance_notes, setMaintenance_notes] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setCurrentUser(userData);\n\n      if (!userData) {\n        history.push('/');\n      }\n    };\n\n    handleVerify();\n  }, []);\n\n  const handleLogin = async loginData => {\n    const userData = await loginUser(loginData);\n    setCurrentUser(userData);\n    history.push('/home');\n  };\n\n  const handleRegister = async registerData => {\n    const userData = await registerUser(registerData);\n    setCurrentUser(userData);\n    history.push('/home');\n  };\n\n  const handleLogout = async registerData => {\n    const userData = await registerUser(registerData);\n    setCurrentUser(userData);\n    history.push('/');\n  };\n\n  useEffect(() => {\n    const fetchMotorcycles = async () => {\n      const motorcycleData = await getAllMotorcycles();\n      setMotorcycles(motorcycleData);\n    };\n\n    const fetchMaintenance_notes = async () => {\n      const maintenance_noteData = await getAllMaintenance_notes();\n      setMaintenance_notes(maintenance_noteData);\n    };\n\n    fetchMotorcycles();\n    fetchMaintenance_notes();\n  }, []);\n\n  const motorcycleHandleCreate = async motorcycleData => {\n    const newMotorcycle = await postMotorcycle(motorcycleData);\n    setMotorcycles(prevState => [...prevState, newMotorcycle]);\n    history.push('/motorcycles');\n  };\n\n  const maintenance_noteHandleCreate = async maintenance_notesData => {\n    const newMaintenance_note = await postMaintenance_note(maintenance_notesData);\n    setMaintenance_notes(prevState => [...prevState, newMaintenance_note]);\n    history.push('/maintenance_notes');\n  };\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData);\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note;\n    }));\n    history.push('/maintenance_notes');\n  };\n\n  const maintenance_noteHandleDelete = async id => {\n    await destroyMaintenance_note(id);\n    setMaintenance_notes(prevState => prevState.filter(maintenance_note => maintenance_note.id !== id));\n  };\n\n  console.log(currentUser);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    currentUser: currentUser,\n    handleLogout: handleLogout,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mcnotes\",\n          children: /*#__PURE__*/_jsxDEV(McNotes, {\n            handleCreate: maintenance_noteHandleCreate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"notesdetail\",\n          children: /*#__PURE__*/_jsxDEV(NotesDetail, {\n            handleUpdate: maintenance_notehandleUpdate,\n            handleDelete: maintenance_noteHandleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wXok/zN0jKXm+8Uuf4qdAWC565k=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/App.js"],"names":["useState","useEffect","Switch","Route","useHistory","MainContainer","Layout","Login","Register","AddMc","Home","McNotes","NotesDetail","loginUser","registerUser","removeToken","verifyUser","getAllMotorcycles","postMotorcycle","destroyMaintenance_note","getAllMaintenance_notes","postMaintenance_note","putMaintenance_note","App","currentUser","setCurrentUser","motorcycles","setMotorcycles","maintenance_notes","setMaintenance_notes","history","handleVerify","userData","push","handleLogin","loginData","handleRegister","registerData","handleLogout","fetchMotorcycles","motorcycleData","fetchMaintenance_notes","maintenance_noteData","motorcycleHandleCreate","newMotorcycle","prevState","maintenance_noteHandleCreate","maintenance_notesData","newMaintenance_note","maintenance_notehandleUpdate","id","updatedMaintenance_note","map","maintenance_note","Number","maintenance_noteHandleDelete","filter","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Switch, Route, useHistory } from 'react-router-dom'\n\nimport './App.css';\nimport MainContainer from './containers/MainContainer'\nimport Layout from './layouts/Layout'\nimport Login from './screens/Login'\nimport Register from './screens/Register'\nimport AddMc from './screens/AddMc'\nimport Home from './screens/Home'\nimport McNotes from './screens/McNotes'\nimport NotesDetail from './screens/NotesDetail'\nimport { loginUser, registerUser, removeToken, verifyUser } from './services/auth'\nimport { getAllMotorcycles, postMotorcycle } from './services/motorcycles'\nimport { destroyMaintenance_note, getAllMaintenance_notes, postMaintenance_note, putMaintenance_note } from './services/maintenance_notes'\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [motorcycles, setMotorcycles] = useState([])\n  const [maintenance_notes, setMaintenance_notes] = useState([])\n  const history = useHistory()\n\n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setCurrentUser(userData)\n      if (!userData) {\n        history.push('/')\n      }\n    }\n    handleVerify()\n  }, [])\n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData)\n    setCurrentUser(userData)\n    history.push('/home')\n  }\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData)\n    setCurrentUser(userData)\n    history.push('/home')\n  }\n\n  const handleLogout = async (registerData) => {\n    const userData = await registerUser(registerData)\n    setCurrentUser(userData)\n    history.push('/')\n  }\n\n  useEffect(() => {\n    const fetchMotorcycles = async () => {\n      const motorcycleData = await getAllMotorcycles()\n      setMotorcycles(motorcycleData)\n    }\n    const fetchMaintenance_notes = async () => {\n      const maintenance_noteData = await getAllMaintenance_notes()\n      setMaintenance_notes(maintenance_noteData)\n    }\n    fetchMotorcycles()\n    fetchMaintenance_notes()\n  }, [])\n  \n  const motorcycleHandleCreate = async (motorcycleData) => {\n    const newMotorcycle = await postMotorcycle(motorcycleData)\n    setMotorcycles(prevState => [...prevState, newMotorcycle])\n    history.push('/motorcycles')\n  }\n  \n  const maintenance_noteHandleCreate = async (maintenance_notesData) => {\n    const newMaintenance_note = await postMaintenance_note(maintenance_notesData)\n    setMaintenance_notes(prevState => [...prevState, newMaintenance_note])\n    history.push('/maintenance_notes')\n  }\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n    }))\n    history.push('/maintenance_notes')\n  }\n\n  const maintenance_noteHandleDelete = async (id) => {\n    await destroyMaintenance_note(id)\n    setMaintenance_notes(prevState => prevState.filter(maintenance_note => maintenance_note.id !== id))\n  }\n\n  console.log(currentUser)\n\n  return (\n    <Layout\n      currentUser={currentUser}\n      handleLogout={handleLogout}\n    >\n     \n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Login handleLogin={handleLogin} />\n        </Route>\n\n        <Route path='/register'>\n          <Register handleRegister={handleRegister} />\n        </Route>\n\n        <Route path='/home'>\n          <Home currentUser={currentUser} />\n        </Route>\n\n       <Route path='/mcnotes'>\n        <McNotes handleCreate={maintenance_noteHandleCreate}/> \n       </Route>\n      \n      <Route path='notesdetail'>\n        <NotesDetail handleUpdate={maintenance_notehandleUpdate} handleDelete={maintenance_noteHandleDelete}/>\n      </Route>\n    </Switch>\n     </div>\n  </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}