{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './NotesEdit.css';\nimport { putMaintenance_note } from '../services/maintenance_notes';\nimport { useParams, useHistory } from 'react-router-dom';\n\nfunction NotesEdit(props) {\n  _s();\n\n  console.log(props);\n  const [note, setNote] = useState({});\n  const [isLoaded, setLoaded] = useState(null);\n  const [isUpdated, setUpdated] = useState(false);\n  const [maintenance_notes, setMaintenance_notes] = useState({\n    content: ''\n  });\n  const {\n    id,\n    motorcycle_id\n  } = useParams();\n  const history = useHistory();\n\n  const sendRefresh = () => {\n    history.push(`/motorcycles/${motorcycle_id}/notesdetail`);\n  };\n\n  useEffect(() => {\n    if (props.maintenance_notes.length) {\n      const getNote = props.maintenance_notes.find(note => note.id === Number(id));\n      setNote(getNote);\n      setLoaded(true);\n      console.log(note);\n    }\n  }, [id]);\n  console.log(note);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote({ ...note,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const updated = await putMaintenance_note(id, note);\n    setUpdated(updated);\n  };\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData);\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note;\n    }));\n    history.push('/maintenance_notes');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-edit-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit your comment! DO IT!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"edit-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"edit-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"edit-input\",\n          placeholder: note.content,\n          value: note.content,\n          name: \"content\",\n          required: true,\n          autoFocus: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"basic-button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NotesEdit, \"a8sZxBDumfPiqf8BxNssY8Kkrz8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = NotesEdit;\nexport default NotesEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesEdit\");","map":{"version":3,"sources":["/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesEdit.jsx"],"names":["React","useEffect","useState","putMaintenance_note","useParams","useHistory","NotesEdit","props","console","log","note","setNote","isLoaded","setLoaded","isUpdated","setUpdated","maintenance_notes","setMaintenance_notes","content","id","motorcycle_id","history","sendRefresh","push","length","getNote","find","Number","handleChange","event","name","value","target","handleSubmit","preventDefault","updated","maintenance_notehandleUpdate","maintenance_noteData","updatedMaintenance_note","prevState","map","maintenance_note"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './NotesEdit.css'\nimport {putMaintenance_note } from '../services/maintenance_notes';\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction NotesEdit(props) {\n  console.log(props)\n  const [note, setNote] = useState({})\n  const [isLoaded, setLoaded] = useState(null)\n  const [isUpdated, setUpdated] = useState(false)\n  const [maintenance_notes, setMaintenance_notes] = useState({\n    content: '',\n  })\n  const { id, motorcycle_id } = useParams()\n  const history = useHistory()\n\n  const sendRefresh = () => {\n    history.push(`/motorcycles/${motorcycle_id}/notesdetail`)\n  }\n\n  useEffect(() => {\n    if (props.maintenance_notes.length) {\n      const getNote = props.maintenance_notes.find((note) => note.id === Number(id))\n      setNote(getNote)\n      setLoaded(true)\n      console.log(note)\n    }\n  }, [id])\n\n  console.log(note)\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setNote({\n      ...note,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const updated = await putMaintenance_note(id, note)\n    setUpdated(updated)\n  }\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n    }))\n    history.push('/maintenance_notes')\n  }\n \n  return (\n    <div className='notes-edit-container'>\n      <h1>Edit your comment! DO IT!</h1>\n      {\n        <form className=\"edit-form\" onSubmit={handleSubmit}>\n          <label className=\"edit-label\">\n            <div>Content:</div>\n            <textarea\n              className=\"edit-input\"\n              placeholder={note.content}\n              value={note.content}\n              name=\"content\"\n              required\n              autoFocus\n              onChange={handleChange}\n              />\n          </label>\n          <button type='submit' className=\"basic-button\">Save</button>\n        </form>\n      }\n    </div>\n  );\n}\n\nexport default NotesEdit;"]},"metadata":{},"sourceType":"module"}