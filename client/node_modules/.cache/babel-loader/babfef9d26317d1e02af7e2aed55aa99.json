{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './NotesDetail.css';\nimport { Link, Redirect, useParams, useHistory } from 'react-router-dom';\nimport { postMaintenance_note, getAllMaintenance_notes, destroyMaintenance_note, putMaintenance_note } from '../services/maintenance_notes'; // import { maintenance_noteHandleDelete, maintenance_noteHandleUpdate } from '../App'\n\nfunction NotesDetail(props) {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [isLoaded, setLoaded] = useState(null);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [maintenance_notes, setMaintenance_notes] = useState({\n    content: ''\n  });\n  console.log(props);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    if (props.maintenance_notes.length) {\n      const getNotes = props.maintenance_notes.filter(note => note.motorcycle_id === Number(id));\n      setNotes(getNotes);\n      setLoaded(true);\n      console.log(notes);\n    }\n  }, [id]);\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isDeleted) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this);\n  }\n\n  const maintenance_noteHandleDelete = async this_id => {\n    await destroyMaintenance_note(this_id);\n    setIsDeleted(!isDeleted);\n  };\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData);\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note;\n    }));\n    history.push('/maintenance_notes');\n  };\n\n  const maintenance_noteHandleCreate = async maintenance_notesData => {\n    const newMaintenance_note = await postMaintenance_note(maintenance_notesData);\n    setMaintenance_notes(prevState => [...prevState, newMaintenance_note]);\n    history.push('/maintenance_notes');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new note, or Update and Delete your current notes!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"basic-button\",\n      onClick: maintenance_noteHandleCreate,\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [note.content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"basic-button\",\n        onClick: () => maintenance_noteHandleDelete(note.id),\n        children: \"Delete Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/motorcycles/${id}/notesdetail/edit`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"basic-button\",\n          children: \"Edit Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NotesDetail, \"zBJWq2Is7CV5XqQFRy5DQT07zys=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = NotesDetail;\nexport default NotesDetail; // onClick={maintenance_noteHandleDelete}\n// onclick={maintenance_noteHandleUpdate}\n//refactor code so I can get all props?\n//Something deleted mc 1's notes and seeding didn't bring them back\n//took SS of working code refactoring to props\n//i need to pass the setnotes use state from app\n//is currently always looking for http://localhost:3000/motorcycles/1/maintenance_notes/1 it is also currently running on load lol\n// onClick={maintenance_notehandleUpdate}\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesDetail\");","map":{"version":3,"sources":["/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesDetail.jsx"],"names":["React","useEffect","useState","Link","Redirect","useParams","useHistory","postMaintenance_note","getAllMaintenance_notes","destroyMaintenance_note","putMaintenance_note","NotesDetail","props","notes","setNotes","isLoaded","setLoaded","isDeleted","setIsDeleted","maintenance_notes","setMaintenance_notes","content","console","log","id","history","length","getNotes","filter","note","motorcycle_id","Number","maintenance_noteHandleDelete","this_id","maintenance_notehandleUpdate","maintenance_noteData","updatedMaintenance_note","prevState","map","maintenance_note","push","maintenance_noteHandleCreate","maintenance_notesData","newMaintenance_note"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './NotesDetail.css'\nimport {Link, Redirect, useParams, useHistory} from 'react-router-dom'\nimport { postMaintenance_note, getAllMaintenance_notes, destroyMaintenance_note,  putMaintenance_note } from '../services/maintenance_notes';\n// import { maintenance_noteHandleDelete, maintenance_noteHandleUpdate } from '../App'\n\n\nfunction NotesDetail(props) {\n  const [notes, setNotes] = useState([])\n  const [isLoaded, setLoaded] = useState(null)\n  const [isDeleted, setIsDeleted] = useState(false)\n  const [maintenance_notes, setMaintenance_notes] = useState({\n    content: '',\n  })\n  console.log(props)\n  const { id } = useParams()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (props.maintenance_notes.length) {\n      const getNotes = props.maintenance_notes.filter((note) => note.motorcycle_id === Number(id))\n      setNotes(getNotes)\n      setLoaded(true)\n      console.log(notes)\n    }\n  }, [id])\n\n  if (!isLoaded) {\n    return <h1>Loading...</h1>\n  }\n  if (isDeleted) {\n  return <Redirect to={\"/home\"} />\n  }\n\n  const maintenance_noteHandleDelete = async (this_id) => {\n    await destroyMaintenance_note(this_id)\n    setIsDeleted(!isDeleted)\n  }\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n    }))\n    history.push('/maintenance_notes')\n  }\n\n  const maintenance_noteHandleCreate = async (maintenance_notesData) => {\n    const newMaintenance_note = await postMaintenance_note(maintenance_notesData)\n    setMaintenance_notes(prevState => [...prevState, newMaintenance_note])\n    history.push('/maintenance_notes')\n  }\n\n  \n  return (\n    <div className=\"notes-detail-container\">\n      <h2>Add a new note, or Update and Delete your current notes!</h2>\n      <button className=\"basic-button\" onClick={maintenance_noteHandleCreate}>Add Note</button>\n      {\n        notes.map(note => (\n          <p key={note.id}>\n            {note.content}{/* buttons for update and delete */}\n            {<button className=\"basic-button\" onClick={() => maintenance_noteHandleDelete(note.id)}>Delete Note</button>}\n            {<Link to={`/motorcycles/${id}/notesdetail/edit`}><button className=\"basic-button\">Edit Note</button></Link>}\n          </p>\n        ))\n       }\n    </div>\n  );\n}\n\nexport default NotesDetail;\n// onClick={maintenance_noteHandleDelete}\n// onclick={maintenance_noteHandleUpdate}\n\n//refactor code so I can get all props?\n\n//Something deleted mc 1's notes and seeding didn't bring them back\n//took SS of working code refactoring to props\n\n//i need to pass the setnotes use state from app\n\n//is currently always looking for http://localhost:3000/motorcycles/1/maintenance_notes/1 it is also currently running on load lol\n\n// onClick={maintenance_notehandleUpdate}"]},"metadata":{},"sourceType":"module"}