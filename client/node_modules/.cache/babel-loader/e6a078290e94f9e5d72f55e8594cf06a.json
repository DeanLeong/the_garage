{"ast":null,"code":"// import React from 'react';\n// import { useState, useEffect } from 'react'\n// import { Switch, Route, useHistory } from 'react-router-dom'\n// import AddMc from '../screens/AddMc'\n// import Home from '../screens/Home'\n// import McNotes from '../screens/McNotes'\n// import NotesDetail from '../screens/NotesDetail'\n// import { getAllMotorcycles, postMotorcycle } from '../services/motorcycles'\n// import { destroyMaintenance_note, getAllMaintenance_notes, postMaintenance_note, putMaintenance_note } from '../services/maintenance_notes'\n// function MainContainer(props) {\n//   const [motorcycles, setMotorcycles] = useState([])\n//   const [maintenance_notes, setMaintenance_notes] = useState([])\n//   const history = useHistory()\n//   useEffect(() => {\n//     const fetchMotorcycles = async () => {\n//       const motorcycleData = await getAllMotorcycles()\n//       setMotorcycles(motorcycleData)\n//     }\n//     const fetchMaintenance_notes = async () => {\n//       const maintenance_noteData = await getAllMaintenance_notes()\n//       setMaintenance_notes(maintenance_noteData)\n//     }\n//     fetchMotorcycles()\n//     fetchMaintenance_notes()\n//   }, [])\n//   const motorcycleHandleCreate = async (motorcycleData) => {\n//     const newMotorcycle = await postMotorcycle(motorcycleData)\n//     setMotorcycles(prevState => [...prevState, newMotorcycle])\n//     history.push('/motorcycles')\n//   }\n//   const maintenance_noteHandleCreate = async (maintenance_notesData) => {\n//     const newMaintenance_note = await postMaintenance_note(maintenance_notesData)\n//     setMaintenance_notes(prevState => [...prevState, newMaintenance_note])\n//     history.push('/maintenance_notes')\n//   }\n//   const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n//     const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n//     setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n//       return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n//     }))\n//     history.push('/maintenance_notes')\n//   }\n//   const maintenance_noteHandleDelete = async (id) => {\n//     await destroyMaintenance_note(id)\n//     setMaintenance_notes(prevState => prevState.filter(maintenance_note => maintenance_note.id !== id))\n//   }\n//   return (\n//     <Switch>\n//       <Route path='/motorcycle_notes'>\n//         <McNotes maintenance_notes={maintenance_notes} />\n//       </Route>\n//       <Route path='/'\n//     </Switch>\n//   );\n// }\n// export default MainContainer;\n// I need handle creates for both motorcycles and notes and handle updates, delete for just the notes\n// multiple handle creates?","map":{"version":3,"sources":["/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/containers/MainContainer.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA","sourcesContent":["// import React from 'react';\n// import { useState, useEffect } from 'react'\n// import { Switch, Route, useHistory } from 'react-router-dom'\n\n// import AddMc from '../screens/AddMc'\n// import Home from '../screens/Home'\n// import McNotes from '../screens/McNotes'\n// import NotesDetail from '../screens/NotesDetail'\n// import { getAllMotorcycles, postMotorcycle } from '../services/motorcycles'\n// import { destroyMaintenance_note, getAllMaintenance_notes, postMaintenance_note, putMaintenance_note } from '../services/maintenance_notes'\n\n// function MainContainer(props) {\n//   const [motorcycles, setMotorcycles] = useState([])\n//   const [maintenance_notes, setMaintenance_notes] = useState([])\n//   const history = useHistory()\n\n//   useEffect(() => {\n//     const fetchMotorcycles = async () => {\n//       const motorcycleData = await getAllMotorcycles()\n//       setMotorcycles(motorcycleData)\n//     }\n//     const fetchMaintenance_notes = async () => {\n//       const maintenance_noteData = await getAllMaintenance_notes()\n//       setMaintenance_notes(maintenance_noteData)\n//     }\n//     fetchMotorcycles()\n//     fetchMaintenance_notes()\n//   }, [])\n  \n//   const motorcycleHandleCreate = async (motorcycleData) => {\n//     const newMotorcycle = await postMotorcycle(motorcycleData)\n//     setMotorcycles(prevState => [...prevState, newMotorcycle])\n//     history.push('/motorcycles')\n//   }\n  \n//   const maintenance_noteHandleCreate = async (maintenance_notesData) => {\n//     const newMaintenance_note = await postMaintenance_note(maintenance_notesData)\n//     setMaintenance_notes(prevState => [...prevState, newMaintenance_note])\n//     history.push('/maintenance_notes')\n//   }\n\n//   const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n//     const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n//     setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n//       return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n//     }))\n//     history.push('/maintenance_notes')\n//   }\n\n//   const maintenance_noteHandleDelete = async (id) => {\n//     await destroyMaintenance_note(id)\n//     setMaintenance_notes(prevState => prevState.filter(maintenance_note => maintenance_note.id !== id))\n//   }\n  \n//   return (\n//     <Switch>\n//       <Route path='/motorcycle_notes'>\n//         <McNotes maintenance_notes={maintenance_notes} />\n//       </Route>\n//       <Route path='/'\n\n//     </Switch>\n//   );\n// }\n\n// export default MainContainer;\n\n// I need handle creates for both motorcycles and notes and handle updates, delete for just the notes\n// multiple handle creates?"]},"metadata":{},"sourceType":"module"}