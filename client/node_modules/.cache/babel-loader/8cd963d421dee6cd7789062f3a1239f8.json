{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect, useParams, useHistory } from 'react-router-dom';\nimport { getAllMaintenance_notes, destroyMaintenance_note } from '../services/maintenance_notes'; // import { maintenance_noteHandleDelete, maintenance_noteHandleUpdate } from '../App'\n\nfunction NotesDetail(props) {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [isLoaded, setLoaded] = useState(null);\n  const [isDeleted, setIsDeleted] = useState(false);\n  console.log(props);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    if (props.maintenance_notes.length) {\n      const getNotes = props.maintenance_notes.filter(note => note.motorcycle_id === Number(id));\n      setNotes(getNotes);\n      setLoaded(true);\n      console.log(notes);\n    }\n  }, [id]);\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isDeleted) {// return <Redirect to={\"/notesdetail\"} />\n  }\n\n  const maintenance_noteHandleDelete = async () => {\n    await destroyMaintenance_note(notes.id);\n    setIsDeleted(!isDeleted);\n  };\n\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData);\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note;\n    }));\n    history.push('/maintenance_notes');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update or Delete your notes!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [note.content, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"basic-button\",\n        onClick: maintenance_noteHandleDelete,\n        children: \"Delete Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"basic-button\",\n        onClick: maintenance_notehandleUpdate,\n        children: \"Edit Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NotesDetail, \"p6W8SVqKxeYtMANGywGaoy3i97s=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = NotesDetail;\nexport default NotesDetail; // onClick={maintenance_noteHandleDelete}\n// onclick={maintenance_noteHandleUpdate}\n//refactor code so I can get all props?\n//Something deleted mc 1's notes and seeding didn't bring them back\n//took SS of working code refactoring to props\n//i need to pass the setnotes use state from app\n//is currently always looking for http://localhost:3000/motorcycles/1/maintenance_notes/1 it is also currently running on load lol\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesDetail\");","map":{"version":3,"sources":["/Users/deanleong/General_Assembly/phoenix/unit_4/the_garage/client/src/screens/NotesDetail.jsx"],"names":["React","useEffect","useState","Link","Redirect","useParams","useHistory","getAllMaintenance_notes","destroyMaintenance_note","NotesDetail","props","notes","setNotes","isLoaded","setLoaded","isDeleted","setIsDeleted","console","log","id","history","maintenance_notes","length","getNotes","filter","note","motorcycle_id","Number","maintenance_noteHandleDelete","maintenance_notehandleUpdate","maintenance_noteData","updatedMaintenance_note","putMaintenance_note","setMaintenance_notes","prevState","map","maintenance_note","push","content"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAoD,kBAApD;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,+BAAjE,C,CACA;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,SAAX,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,QAAM;AAAES,IAAAA;AAAF,MAASd,SAAS,EAAxB;AACA,QAAMe,OAAO,GAAGd,UAAU,EAA1B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAK,CAACW,iBAAN,CAAwBC,MAA5B,EAAoC;AAClC,YAAMC,QAAQ,GAAGb,KAAK,CAACW,iBAAN,CAAwBG,MAAxB,CAAgCC,IAAD,IAAUA,IAAI,CAACC,aAAL,KAAuBC,MAAM,CAACR,EAAD,CAAtE,CAAjB;AACAP,MAAAA,QAAQ,CAACW,QAAD,CAAR;AACAT,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD;AACF,GAPQ,EAON,CAACQ,EAAD,CAPM,CAAT;;AASA,MAAI,CAACN,QAAL,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIE,SAAJ,EAAe,CACf;AACC;;AACD,QAAMa,4BAA4B,GAAG,YAAY;AAC/C,UAAMpB,uBAAuB,CAACG,KAAK,CAACQ,EAAP,CAA7B;AACAH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAHD;;AAIA,QAAMc,4BAA4B,GAAG,OAAOV,EAAP,EAAWW,oBAAX,KAAoC;AACvE,UAAMC,uBAAuB,GAAG,MAAMC,mBAAmB,CAACb,EAAD,EAAKW,oBAAL,CAAzD;AACAG,IAAAA,oBAAoB,CAACC,SAAS,IAAIA,SAAS,CAACC,GAAV,CAAcC,gBAAgB,IAAI;AAClE,aAAOA,gBAAgB,CAACjB,EAAjB,KAAwBQ,MAAM,CAACR,EAAD,CAA9B,GAAqCY,uBAArC,GAA+DK,gBAAtE;AACD,KAFiC,CAAd,CAApB;AAGAhB,IAAAA,OAAO,CAACiB,IAAR,CAAa,oBAAb;AACD,GAND;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGI1B,KAAK,CAACwB,GAAN,CAAUV,IAAI,iBACZ;AAAA,iBACGA,IAAI,CAACa,OADR,eAEG;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAEV,4BAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAEC,4BAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA,OAAQJ,IAAI,CAACN,EAAb;AAAA;AAAA;AAAA;AAAA,YADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAlDQV,W;UAKQJ,S,EACCC,U;;;KANTG,W;AAoDT,eAAeA,WAAf,C,CACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Link, Redirect, useParams, useHistory} from 'react-router-dom'\nimport { getAllMaintenance_notes, destroyMaintenance_note } from '../services/maintenance_notes';\n// import { maintenance_noteHandleDelete, maintenance_noteHandleUpdate } from '../App'\n\n\nfunction NotesDetail(props) {\n  const [notes, setNotes] = useState([])\n  const [isLoaded, setLoaded] = useState(null)\n  const [isDeleted, setIsDeleted] = useState(false)\n  console.log(props)\n  const { id } = useParams()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (props.maintenance_notes.length) {\n      const getNotes = props.maintenance_notes.filter((note) => note.motorcycle_id === Number(id))\n      setNotes(getNotes)\n      setLoaded(true)\n      console.log(notes)\n    }\n  }, [id])\n\n  if (!isLoaded) {\n    return <h1>Loading...</h1>\n  }\n  if (isDeleted) {\n  // return <Redirect to={\"/notesdetail\"} />\n  }\n  const maintenance_noteHandleDelete = async () => {\n    await destroyMaintenance_note(notes.id)\n    setIsDeleted(!isDeleted)\n  }\n  const maintenance_notehandleUpdate = async (id, maintenance_noteData) => {\n    const updatedMaintenance_note = await putMaintenance_note(id, maintenance_noteData)\n    setMaintenance_notes(prevState => prevState.map(maintenance_note => {\n      return maintenance_note.id === Number(id) ? updatedMaintenance_note : maintenance_note\n    }))\n    history.push('/maintenance_notes')\n  }\n\n  \n  return (\n    <div className=\"notes-detail-container\">\n      <h2>Update or Delete your notes!</h2>\n      {\n        notes.map(note => (\n          <p key={note.id}>\n            {note.content}{/* buttons for update and delete */}\n            {<button className=\"basic-button\" onClick={maintenance_noteHandleDelete}>Delete Note</button>}\n            {<button className=\"basic-button\" onClick={maintenance_notehandleUpdate}>Edit Note</button>}\n          </p>\n        ))\n       }\n    </div>\n  );\n}\n\nexport default NotesDetail;\n// onClick={maintenance_noteHandleDelete}\n// onclick={maintenance_noteHandleUpdate}\n\n//refactor code so I can get all props?\n\n//Something deleted mc 1's notes and seeding didn't bring them back\n//took SS of working code refactoring to props\n\n//i need to pass the setnotes use state from app\n\n//is currently always looking for http://localhost:3000/motorcycles/1/maintenance_notes/1 it is also currently running on load lol"]},"metadata":{},"sourceType":"module"}